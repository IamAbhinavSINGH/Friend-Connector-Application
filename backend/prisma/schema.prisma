// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
    id               String       @id @default(auto()) @map("_id") @db.ObjectId
    email            String       @unique
    hashedPassword   String
    name             String
    hobbies          Hobby[]
    interests        Interest[]
    sentRequests     Request[]    @relation("SentRequests")
    recievedRequests Request[]    @relation("ReceivedRequests")
    following        Friendship[] @relation("Friends")
    followers        Friendship[] @relation("UserFriends")
}

model Interest{
    id String @id @default(auto()) @map("_id") @db.ObjectId
    interest String
    user User @relation(fields: [userId], references: [id])
    userId String @db.ObjectId
}

model Hobby{
    id String @id @default(auto()) @map("_id") @db.ObjectId
    hobby String
    user User @relation(fields: [userId], references: [id])
    userId String @db.ObjectId
}

model Request{
    id String @id @default(auto()) @map("_id") @db.ObjectId
    sender    User          @relation("SentRequests", fields: [senderId], references: [id])
    senderId  String        @db.ObjectId
    receiver  User          @relation("ReceivedRequests", fields: [receiverId], references: [id])
    receiverId String       @db.ObjectId
    status RequestStatus
    date DateTime @updatedAt
}

model Friendship {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation("UserFriends", fields: [userId], references: [id])
  userId    String   @db.ObjectId
  friend    User     @relation("Friends", fields: [friendId], references: [id])
  friendId  String   @db.ObjectId
  date      DateTime @updatedAt
}

enum RequestStatus{
    Accepted
    Rejected
    Pending
}